{{- if .Values.grafanaCloud.createSecret }}
{{- /* WARNING: This creates secrets with values from values.yaml which is NOT recommended for production */ -}}
{{- /* Use external secret management (Vault, AWS Secrets Manager, etc.) or create secrets manually */ -}}
{{- fail "ERROR: Creating secrets from values.yaml is disabled for security. Create secrets externally or set grafanaCloud.createSecret=false and grafanaCloud.authSecretName to existing secret name." }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.grafanaCloud.authSecretName }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "otel-collectors.labels" . | nindent 4 }}
  {{- with .Values.commonAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
type: Opaque
data:
  username: {{ .Values.grafanaCloud.username | b64enc | quote }}
  password: {{ .Values.grafanaCloud.password | b64enc | quote }}
{{- end }}

{{- /* 
Example of using lookup function to reference existing secrets:
{{- $secret := lookup "v1" "Secret" .Values.global.namespace .Values.grafanaCloud.authSecretName }}
{{- if not $secret }}
  {{- fail (printf "Secret '%s' not found in namespace '%s'. Please create the secret before deploying." .Values.grafanaCloud.authSecretName .Values.global.namespace) }}
{{- end }}
*/ -}}