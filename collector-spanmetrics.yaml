apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: collector-spanmetrics
  namespace: o11y
spec:
  image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.133.0
  config:
    connectors:
      spanmetrics:
        dimensions:
          - name: service.namespace
          - name: service.version
          - name: deployment.environment
          - name: deployment.environment.name
          - name: k8s.cluster.name
          - name: k8s.namespace.name
          - name: cloud.region
          - name: cloud.availability_zone
        histogram:
          explicit:
            buckets: [0.2s, 0.5s, 0.7s, 1s, 1.5s, 5s]
          unit: s
        metrics_flush_interval: 60s
        exemplars:
          enabled: true
          max_per_data_point: 4
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
    
    processors:
      batch:
        timeout: 5s
        send_batch_size: 8192
        send_batch_max_size: 8192
      memory_limiter:
        limit_mib: 1500
        check_interval: 1s
        spike_limit_mib: 400
      resource/add_collector_info:
        attributes:
        - action: upsert
          key: service.version
          value: "0.133.0"
        - action: upsert
          key: collector.name
          value: "collector-spanmetrics"
        - action: upsert
          key: collector.type
          value: "spanmetrics"
        - action: upsert
          key: otel_collector_environment
          value: ${env:COLLECTOR_ENVIRONMENT}
      filter/spanmetrics_only:
        metrics:
          include:
            match_type: regexp
            metric_names:
            - "^duration.*"
            - "^calls.*" 
            - "^latency.*"
            - ".*duration.*"
            - ".*_duration.*"
            - ".*_total$"
            - ".*_count$"
    
    exporters:
      otlphttp/grafanacloud:
        endpoint: ${env:GRAFANA_OTLP_ENDPOINT}
        auth:
          authenticator: basicauth/grafanacloud
        compression: gzip
        timeout: 30s
        retry_on_failure:
          enabled: true
          initial_interval: 5s
          max_interval: 30s
          max_elapsed_time: 300s
        sending_queue:
          enabled: true
          num_consumers: 10
          queue_size: 1000
        headers:
          User-Agent: "otel-collector-spanmetrics/0.133.0"
    
    extensions:
      basicauth/grafanacloud:
        client_auth:
          username: ${env:GRAFANA_USERNAME}
          password: ${env:GRAFANA_PASSWORD}
      health_check:
        endpoint: 0.0.0.0:13133
    
    service:
      extensions: [basicauth/grafanacloud, health_check]
      pipelines:
        traces:
          receivers: [otlp]
          processors: [memory_limiter, resource/add_collector_info, batch]
          exporters: [spanmetrics]
        metrics:
          receivers: [spanmetrics]
          processors: [memory_limiter, resource/add_collector_info, filter/spanmetrics_only, batch]
          exporters: [otlphttp/grafanacloud]
      telemetry:
        logs:
          level: INFO
        metrics:
          level: detailed
          readers:
          - pull:
              exporter:
                prometheus:
                  host: 0.0.0.0
                  port: 8888
  
  replicas: 2
  resources:
    limits:
      memory: 8Gi
    requests:
      memory: 4Gi
      cpu: 500m
  
  env:
  - name: GOMEMLIMIT
    value: 1800MiB
  - name: COLLECTOR_ENVIRONMENT
    value: "production"
  - name: GRAFANA_OTLP_ENDPOINT
    value: "https://otlp-gateway-prod-eu-west-3.grafana.net/otlp"
  - name: GRAFANA_USERNAME
    valueFrom:
      secretKeyRef:
        key: stack_username
        name: dv-grafanacloud-auth
  - name: GRAFANA_PASSWORD
    valueFrom:
      secretKeyRef:
        key: stack_password
        name: dv-grafanacloud-auth